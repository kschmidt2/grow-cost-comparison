let chart,annotation1={id:"e-p-anno",shapes:[{point:{xAxis:0,yAxis:0,x:Date.UTC(2020,3,1),y:69.67},type:"circle",r:8},{point:{xAxis:0,yAxis:0,x:Date.UTC(2020,1,1),y:80.45},type:"circle",r:8},{points:[{xAxis:0,yAxis:0,x:Date.UTC(2020,3,1),y:69.67},{xAxis:0,yAxis:0,x:Date.UTC(2e3,1,1),y:69.67}],type:"path"},,{points:[{xAxis:0,yAxis:0,x:Date.UTC(2020,1,1),y:80.45},{xAxis:0,yAxis:0,x:Date.UTC(2001,7,1),y:80.45}],type:"path"}]},annotation2={labels:[{text:"Men",point:{x:Date.UTC(2019,1,1),y:66,xAxis:0,yAxis:0}},{text:"Women",point:{x:Date.UTC(2019,1,1),y:55,xAxis:0,yAxis:0}}]};$(".chart-area-womens-recession-intro").parent().css("overflow","visible"),function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("TwoStep",[],t):"object"==typeof exports?exports.TwoStep=t():e.TwoStep=t()}(this,function(){return function(e){function t(i){if(n[i])return n[i].exports;var a=n[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return[40,32,39,34].indexOf(e)>-1?1:[37,38,33].indexOf(e)>-1?-1:0},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.instances=[]}return i(e,[{key:"register",value:function(e){return this.instances.push(e),this}},{key:"getActiveInstances",value:function(){return this.instances.filter(function(e){return e.enabled})}}]),e}();t.default=a,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=i(n(0)),r=new(i(n(1)).default),s=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),0===t.elements.length)throw"Elements array is empty";if(t.narrative){if(t.elements.length!==t.narrative.length)throw"Elements and narrative are different lengths";if(!1==!t.narrative.filter(function(e){return"function"!=typeof e}).length)throw"Narrative contains non-functions";this.narrative=t.narrative}this.onChange=t.onChange,this.elements=Array.prototype.slice.call(t.elements),this.enabled=!0,this.offset=t.hasOwnProperty("offset")?t.offset:{down:"50%",up:"0"};var n=this.setWaypoints(this.elements,function(e){if("down"==e){var t=a.elements.indexOf(this.element);t!==this.index&&a.goTo(t,!1,e)}},t.continuous,this.offset.down),i=this.setWaypoints(this.elements,function(e){if("up"==e){var t=a.elements.indexOf(this.element);t!==this.index&&a.goTo(t,!1,e)}},t.continuous,this.offset.up);if(this.waypoints=[n,i],t.stick){if(void 0===$().fixTo)throw"fixTo is not present on the page, or may have been loaded in before jQuery.";$(t.stick).wrapInner('<div class="two-step-sticky-wrapper"></div>'),this.sticky=$(t.stick).find(".two-step-sticky-wrapper").fixTo($(t.stick))}this.setKeyboard(),this.index=-1,r.register(this),setInterval(function(){Waypoint.refreshAll()},1e3);var a=this}return a(e,[{key:"goTo",value:function(e,t,n){var i=this;if(!1===this.isValidIndex(e))throw e+" is not a valid index. Must be between 0 and "+(this.elements.length-1)+" (inclusive).";this.narrative&&this.narrative[e]({element:this.elements[e],index:e,direction:n}),this.onChange&&this.onChange({element:this.elements[e],index:e,direction:n}),this.index=e;var a=$(this.elements).eq(e);return $(this.elements).removeClass("active"),a.addClass("active"),!0===t?(this.disableWaypoints(),$("html, body").animate({scrollTop:a.offset().top-100},500).promise().then(function(){i.enableWaypoints()})):$.Deferred().resolve()}},{key:"setWaypoints",value:function(e,t){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=arguments[3];return e.map(function(e){return new Waypoint({element:e,handler:t,continuous:n,offset:i})})}},{key:"setKeyboard",value:function(){var e=this;$(window).keydown(function(t){if(e.disabled)return!0;var n=(0,o.default)(t.keyCode),i=r.getActiveInstances();if(0!==n&&t.target===document.body&&!1===t.metaKey&&1===i.length){var a=e.index+n;return!e.isValidIndex(a)||(e.goTo(a,!0),t.preventDefault(),!1)}})}},{key:"isValidIndex",value:function(e){return e<this.elements.length&&e>-1}},{key:"disableWaypoints",value:function(){[].concat.apply([],this.waypoints).forEach(function(e){return e.disable()})}},{key:"enableWaypoints",value:function(){[].concat.apply([],this.waypoints).forEach(function(e){return e.enable()})}},{key:"disable",value:function(){this.disabled=!0,this.enabled=!1,this.disableWaypoints(),this.sticky&&this.sticky.fixTo("stop")}},{key:"enable",value:function(){this.disabled=!1,this.enabled=!0,this.enableWaypoints(),this.sticky&&this.sticky.fixTo("start")}}]),e}();t.default=s,e.exports=t.default}])});var ts=new TwoStep({elements:document.querySelectorAll(".parent .narrative-item"),onChange:function(e){console.log("Item "+e.index)},stick:document.querySelector(".parent .sticky-outer"),narrative:[function(e){$(".chart-title").text("Percent of people 25-54 who are employed"),$(".highcharts-color-0").css("stroke","#9a9fa0"),chart.removeAnnotation(annotation2),chart.addAnnotation(annotation1),chart.update({chart:{type:"area"},data:{csvURL:"https://raw.githubusercontent.com/kschmidt2/grow-womens-recession-intro/master/app/data/e-p-rate.csv"},yAxis:{min:60,max:85}})},function(e){chart.removeAnnotation("e-p-anno"),chart.addAnnotation(annotation2),$(".chart-title").text("Percent of men and women employed"),$(".highcharts-series-0").css("stroke","yellow"),chart.update({chart:{type:"line"},data:{csvURL:"https://raw.githubusercontent.com/kschmidt2/grow-womens-recession-intro/master/app/data/e-p-gender.csv"},yAxis:{min:45,max:70}})},function(e){chart.removeAnnotation("e-p-anno")},function(e){chart.removeAnnotation("e-p-anno")}],offset:{up:"-10%",down:"70%"}});function drawHighcharts(){chart=Highcharts.chart("chart-container-intro",{chart:{type:"area",styledMode:!0,spacingBottom:25,spacingRight:25,spacingLeft:5,spacingTop:20,animation:{duration:1e3}},title:{text:null},data:{csvURL:"https://raw.githubusercontent.com/kschmidt2/grow-womens-recession-intro/master/app/data/e-p-rate.csv"},annotations:[{}],plotOptions:{series:{lineWidth:1,states:{hover:{enabled:!1}},marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{fillColor:"#ffffff"}}}}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5,plotBands:[{from:Date.UTC(2020,1,1),to:Date.UTC(2020,9,30),label:{text:"Pandemic",textAlign:"center"}}]},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},min:60,max:85,tickAmount:6},credits:{enabled:!1},tooltip:{enabled:!1},defs:{gradient0:{tagName:"linearGradient",id:"gradient-0",x1:0,y1:0,x2:0,y2:1,children:[{tagName:"stop",offset:0},{tagName:"stop",offset:1}]}},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:25,spacingLeft:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})}Highcharts.setOptions({lang:{thousandsSep:","}}),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
